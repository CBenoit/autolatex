#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Copyright (C) 1998-2021 Stephane Galland <galland@arakhne.org>
#
# This program is free library; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 3 of the
# License, or any later version.
#
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; see the file COPYING.  If not,
# write to the Free Software Foundation, Inc., 59 Temple Place - Suite
# 330, Boston, MA 02111-1307, USA.

'''
Biber tools.
'''

import re

######################################################################
##
class BiberErrorParser(object):
	'''
	Parser for errors generated by Biber.
	'''

	def __init__(self):
		'''
		Construct the parser.
		'''
		pass

	def parseLog(self,  defaultFilename : str,  log : str) -> object:
		'''
		Parse the Biber log and replies the discovered error.
		:param filename: The name of the Biber file to parse.
		:type filename: str
		:param log: Content of the log.
		:type log: str
		:rtype: object
		'''
		currentError = dict()
		for line in re.split('[\n\r]',  log):
			m = re.search('^\s*ERROR\s*\-\s*.*subsystem:\s*(.+?),\s*line\s+([0-9]+),\s*(.*?)\s*$',  line, re.S | re.IGNORECASE)
			if m:
				filename = m.group(1)
				lineno = int(m.group(2))
				message = m.group(3)
				m = re.search('^(.+)_[0-9]+\.[a-zA-Z0-9_-]+$',  filename,  re.S)
				if m:
					filename = m.group(1)
				currentError = {
					'filename': filename , 
					'lineno': lineno, 
					'message': message
				}
				return currentError
			else:
				m = re.search('^\s*ERROR\s*\-\s*(.+?)\s*$',  line,  re.S | re.IGNORECASE)
				if m:
					message = m.group(1)
					currentError = {
						'filename': defaultFilename , 
						'lineno': 0, 
						'message': message
					}
					return currentError
		if currentError:
			return currentError
		return None
